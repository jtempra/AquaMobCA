// <auto-generated />
using System;
using Infraestructure.Persistence.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200719174342_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.AnotacionOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anotacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperarioId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenTrabajoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperarioId");

                    b.HasIndex("OrdenTrabajoId");

                    b.ToTable("AnotacionesOT");
                });

            modelBuilder.Entity("Domain.Entities.CalleOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoblacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoblacionId");

                    b.ToTable("Calles");
                });

            modelBuilder.Entity("Domain.Entities.ConceptoOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConceptosOT");
                });

            modelBuilder.Entity("Domain.Entities.DetalleOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int?>("ConceptoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperarioId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenTrabajoId")
                        .HasColumnType("int");

                    b.Property<bool>("Validado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ConceptoId");

                    b.HasIndex("OperarioId");

                    b.HasIndex("OrdenTrabajoId");

                    b.ToTable("DetallesOT");
                });

            modelBuilder.Entity("Domain.Entities.EquipoOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("SubinstalacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubinstalacionId");

                    b.ToTable("EquiposOT");
                });

            modelBuilder.Entity("Domain.Entities.FotoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidenciaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LecturaId")
                        .HasColumnType("int");

                    b.Property<int?>("OdenTrabajoId")
                        .HasColumnType("int");

                    b.Property<string>("RutaFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IncidenciaId");

                    b.HasIndex("LecturaId");

                    b.HasIndex("OdenTrabajoId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoLecturasEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConsumoEstimado")
                        .HasColumnType("float");

                    b.Property<double>("ConsumoFacturado")
                        .HasColumnType("float");

                    b.Property<double>("ConsumoImputado")
                        .HasColumnType("float");

                    b.Property<double>("ConsumoLectura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaLectura")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidenciaLecturaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lectura")
                        .HasColumnType("float");

                    b.Property<int>("NumeroContrato")
                        .HasColumnType("int");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidenciaLecturaId");

                    b.ToTable("HistoricosLecturas");
                });

            modelBuilder.Entity("Domain.Entities.IncidenciaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CreadaApp")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EMailAbonado")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSituacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<string>("Localizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("MovilAbonado")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreAbonado")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("NumeroContrato")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("OperarioId")
                        .HasColumnType("int");

                    b.Property<int?>("OrigenId")
                        .HasColumnType("int");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int>("Situacion")
                        .HasColumnType("int");

                    b.Property<string>("Solucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperarioId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("TipoId");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Domain.Entities.InfoAdicionalOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenTrabajoId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("OrdenTrabajoId");

                    b.ToTable("InfosAdicionalesOT");
                });

            modelBuilder.Entity("Domain.Entities.InstalacionOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instalacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("PoblacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoblacionId");

                    b.ToTable("InstalacionesOT");
                });

            modelBuilder.Entity("Domain.Entities.LecturaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Codigo2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Codigo3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("ConsumoAnterior")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionSuministro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailAbonado")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("FechaLecturaActual")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaLecturaAnterior")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaLecturaNuevo")
                        .HasColumnType("DateTime");

                    b.Property<int>("IncidenciaContador")
                        .HasColumnType("int");

                    b.Property<int?>("IncidenciaLecturaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("LecturaActual")
                        .HasColumnType("float");

                    b.Property<double>("LecturaAnterior")
                        .HasColumnType("float");

                    b.Property<double>("LecturaNuevo")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("MovilAbonado")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreAbonado")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NumeroContador")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("NumeroContadorNuevo")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("NumeroContrato")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesLectura")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ObservacionesSuministro")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OperarioId")
                        .HasColumnType("int");

                    b.Property<string>("OrdenRutaLectura")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("OrdenRutaLecturaNueva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<string>("PoblacionSuministro")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<double>("PromedioConsumo")
                        .HasColumnType("float");

                    b.Property<int?>("RutaId")
                        .HasColumnType("int");

                    b.Property<string>("RutaLecturaNueva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacionLectura")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionContador")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IncidenciaLecturaId");

                    b.HasIndex("OperarioId");

                    b.HasIndex("RutaId");

                    b.ToTable("Lecturas");
                });

            modelBuilder.Entity("Domain.Entities.OTEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CalleId")
                        .HasColumnType("int");

                    b.Property<bool>("CreadaApp")
                        .HasColumnType("bit");

                    b.Property<int?>("CreadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("DireccionAdicional")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EMailCliente")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaSituacion")
                        .HasColumnType("DateTime");

                    b.Property<bool>("Generica")
                        .HasColumnType("bit");

                    b.Property<int?>("InstalacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitud")
                        .HasColumnType("float");

                    b.Property<double?>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("MovilCliente")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NombreAbonado")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumeroContrato")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<bool>("PendienteObras")
                        .HasColumnType("bit");

                    b.Property<int?>("PoblacionId")
                        .HasColumnType("int");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<bool>("Recurrente")
                        .HasColumnType("bit");

                    b.Property<int>("Situacion")
                        .HasColumnType("int");

                    b.Property<int?>("SubInstalacionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Trabajos")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalleId");

                    b.HasIndex("CreadorId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("InstalacionId");

                    b.HasIndex("PoblacionId");

                    b.HasIndex("SubInstalacionId");

                    b.HasIndex("TipoId");

                    b.HasIndex("ZonaId");

                    b.ToTable("OrdenesTrabajo");
                });

            modelBuilder.Entity("Domain.Entities.PoblacionOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Poblaciones");
                });

            modelBuilder.Entity("Domain.Entities.RutaLecturaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumeroLecturas")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLeidas")
                        .HasColumnType("int");

                    b.Property<int>("Situacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RutasLectura");
                });

            modelBuilder.Entity("Domain.Entities.SubinstalacionOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstalacionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Subinstalacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("InstalacionId");

                    b.ToTable("SubinstalacionesOT");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidenciaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TiposIncidencia");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidenciaLecturaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TiposIncidenciaLecturas");
                });

            modelBuilder.Entity("Domain.Entities.TipoOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TiposOT");
                });

            modelBuilder.Entity("Domain.Entities.TipoOrigenIncidenciaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("OrigenIncidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposOrigenesIncidencias");
                });

            modelBuilder.Entity("Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Temprà Cor",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Carrer Trobadiners, 40",
                            Email = "jtempra@anoiant.com",
                            Movil = "615051815",
                            NIF = "11223344A",
                            Nombre = "Josep",
                            Password = "123456",
                            PathFoto = "c:\\fotos\\jt.jpg",
                            Rol = 0,
                            UserName = "jtempra"
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "Toful Castanyer",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Carrer Via Apia, 102-1-4",
                            Email = "jtc@terra.es",
                            Movil = "600112233",
                            NIF = "55667788B",
                            Nombre = "Joan",
                            Password = "123456",
                            PathFoto = "c:\\fotos\\jtc.jpg",
                            Rol = 2,
                            UserName = "toful"
                        },
                        new
                        {
                            Id = 3,
                            Apellidos = "Font Cagarro",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Direccion = "Carrer del Montgros, 5",
                            Email = "jfg@terra.es",
                            Movil = "615051814",
                            NIF = "00998877X",
                            Nombre = "Jordi",
                            Password = "123456",
                            PathFoto = "c:\\fotos\\jfg.jpg",
                            Rol = 1,
                            UserName = "jfont"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ZonaOTEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoblacionId")
                        .HasColumnType("int");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PoblacionId");

                    b.ToTable("ZonasOT");
                });

            modelBuilder.Entity("Domain.Entities.AnotacionOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.UserEntity", "Operario")
                        .WithMany()
                        .HasForeignKey("OperarioId");

                    b.HasOne("Domain.Entities.OTEntity", "OrdenTrabajo")
                        .WithMany("Anotaciones")
                        .HasForeignKey("OrdenTrabajoId");
                });

            modelBuilder.Entity("Domain.Entities.CalleOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.PoblacionOTEntity", "Poblacion")
                        .WithMany("Calles")
                        .HasForeignKey("PoblacionId");
                });

            modelBuilder.Entity("Domain.Entities.DetalleOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.ConceptoOTEntity", "Concepto")
                        .WithMany("DetallesOrdenTrabajo")
                        .HasForeignKey("ConceptoId");

                    b.HasOne("Domain.Entities.UserEntity", "Operario")
                        .WithMany()
                        .HasForeignKey("OperarioId");

                    b.HasOne("Domain.Entities.OTEntity", "OrdenTrabajo")
                        .WithMany("DetallesOrdenTrabajo")
                        .HasForeignKey("OrdenTrabajoId");
                });

            modelBuilder.Entity("Domain.Entities.EquipoOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.SubinstalacionOTEntity", "Subinstalacion")
                        .WithMany("Equipos")
                        .HasForeignKey("SubinstalacionId");
                });

            modelBuilder.Entity("Domain.Entities.FotoEntity", b =>
                {
                    b.HasOne("Domain.Entities.IncidenciaEntity", "Incidencia")
                        .WithMany("Fotos")
                        .HasForeignKey("IncidenciaId");

                    b.HasOne("Domain.Entities.LecturaEntity", "Lectura")
                        .WithMany("Fotos")
                        .HasForeignKey("LecturaId");

                    b.HasOne("Domain.Entities.OTEntity", "OdenTrabajo")
                        .WithMany("Fotos")
                        .HasForeignKey("OdenTrabajoId");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoLecturasEntity", b =>
                {
                    b.HasOne("Domain.Entities.TipoIncidenciaLecturaEntity", "IncidenciaLectura")
                        .WithMany()
                        .HasForeignKey("IncidenciaLecturaId");
                });

            modelBuilder.Entity("Domain.Entities.IncidenciaEntity", b =>
                {
                    b.HasOne("Domain.Entities.UserEntity", "Operario")
                        .WithMany("Incidencias")
                        .HasForeignKey("OperarioId");

                    b.HasOne("Domain.Entities.TipoOrigenIncidenciaEntity", "Origen")
                        .WithMany("Incidencias")
                        .HasForeignKey("OrigenId");

                    b.HasOne("Domain.Entities.TipoIncidenciaEntity", "Tipo")
                        .WithMany("Incidencias")
                        .HasForeignKey("TipoId");
                });

            modelBuilder.Entity("Domain.Entities.InfoAdicionalOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.OTEntity", "OrdenTrabajo")
                        .WithMany()
                        .HasForeignKey("OrdenTrabajoId");
                });

            modelBuilder.Entity("Domain.Entities.InstalacionOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.PoblacionOTEntity", "Poblacion")
                        .WithMany("Instalaciones")
                        .HasForeignKey("PoblacionId");
                });

            modelBuilder.Entity("Domain.Entities.LecturaEntity", b =>
                {
                    b.HasOne("Domain.Entities.TipoIncidenciaLecturaEntity", "IncidenciaLectura")
                        .WithMany("Lecturas")
                        .HasForeignKey("IncidenciaLecturaId");

                    b.HasOne("Domain.Entities.UserEntity", "Operario")
                        .WithMany("Lecturas")
                        .HasForeignKey("OperarioId");

                    b.HasOne("Domain.Entities.RutaLecturaEntity", "Ruta")
                        .WithMany("Lecturas")
                        .HasForeignKey("RutaId");
                });

            modelBuilder.Entity("Domain.Entities.OTEntity", b =>
                {
                    b.HasOne("Domain.Entities.CalleOTEntity", "Calle")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("CalleId");

                    b.HasOne("Domain.Entities.UserEntity", "Creador")
                        .WithMany("OrdenesTrabajoCreadas")
                        .HasForeignKey("CreadorId");

                    b.HasOne("Domain.Entities.EquipoOTEntity", "Equipo")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("EquipoId");

                    b.HasOne("Domain.Entities.UserEntity", "Responsable")
                        .WithMany("OrdenesTrabajoGestionadas")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.InstalacionOTEntity", "Instalacion")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("InstalacionId");

                    b.HasOne("Domain.Entities.PoblacionOTEntity", "Poblacion")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("PoblacionId");

                    b.HasOne("Domain.Entities.SubinstalacionOTEntity", "SubInstalacion")
                        .WithMany()
                        .HasForeignKey("SubInstalacionId");

                    b.HasOne("Domain.Entities.TipoOTEntity", "Tipo")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("TipoId");

                    b.HasOne("Domain.Entities.ZonaOTEntity", "Zona")
                        .WithMany("OrdenesTrabajo")
                        .HasForeignKey("ZonaId");
                });

            modelBuilder.Entity("Domain.Entities.SubinstalacionOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.InstalacionOTEntity", "Instalacion")
                        .WithMany("Subinstalaciones")
                        .HasForeignKey("InstalacionId");
                });

            modelBuilder.Entity("Domain.Entities.ZonaOTEntity", b =>
                {
                    b.HasOne("Domain.Entities.PoblacionOTEntity", "Poblacion")
                        .WithMany("Zonas")
                        .HasForeignKey("PoblacionId");
                });
#pragma warning restore 612, 618
        }
    }
}
